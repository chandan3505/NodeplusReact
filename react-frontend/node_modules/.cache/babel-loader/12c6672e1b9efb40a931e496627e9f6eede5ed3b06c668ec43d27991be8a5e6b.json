{"ast":null,"code":"var _jsxFileName = \"/Users/chandan/Desktop/Student/react-frontend/src/components/UserList.js\",\n  _s = $RefreshSig$();\n// // // UserList.js\n// import React, { useEffect, useState } from 'react';\n// import $ from 'jquery';\n// import 'datatables.net';\n// import '../UserList.css';\n// import UserService from '../services/UserService';\n\n// const UserList = () => {\n//   const [users, setUsers] = useState([]);\n\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       try {\n//         const usersData = await UserService.getAllUsers();\n//         setUsers(usersData);\n\n//         // Initialize DataTable after fetching data\n//         $('#userTable').DataTable();\n//       } catch (error) {\n//         console.error('Error fetching users:', error);\n//       }\n//     };\n\n//     fetchUsers();\n//   }, []);\n\n//   return (\n//     <div className=\"user-list-container\">\n//       <h1>User List</h1>\n//       <table id=\"userTable\" className=\"display datatable\" >\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>Name</th>\n//             <th>Email</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {users.map((user) => (\n//             <tr key={user.id}>\n//               <td>{user.id}</td>\n//               <td>{user.name}</td>\n//               <td>{user.email}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default UserList;\n// UserList.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport $ from 'jquery';\nimport 'datatables.net';\nimport '../UserList.css';\nimport UserService from '../services/UserService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserList = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const dataTableRef = useRef(null);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const usersData = await UserService.getAllUsers();\n        setUsers(usersData);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    // Initialize DataTable after fetching data and setting it in state\n    if (users.length > 0 && !dataTableRef.current) {\n      dataTableRef.current = $('#userTable').DataTable();\n    }\n    return () => {\n      // Destroy DataTable instance on component unmount\n      if (dataTableRef.current) {\n        dataTableRef.current.destroy();\n      }\n    };\n  }, [users]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"userTable\",\n      className: \"display\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(UserList, \"J/MnqPDewMKsbqnNuODa2A72lbQ=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useEffect","useState","useRef","$","UserService","jsxDEV","_jsxDEV","UserList","_s","users","setUsers","dataTableRef","fetchUsers","usersData","getAllUsers","error","console","length","current","DataTable","destroy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","user","name","email","_c","$RefreshReg$"],"sources":["/Users/chandan/Desktop/Student/react-frontend/src/components/UserList.js"],"sourcesContent":["// // // UserList.js\n// import React, { useEffect, useState } from 'react';\n// import $ from 'jquery';\n// import 'datatables.net';\n// import '../UserList.css';\n// import UserService from '../services/UserService';\n\n// const UserList = () => {\n//   const [users, setUsers] = useState([]);\n\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       try {\n//         const usersData = await UserService.getAllUsers();\n//         setUsers(usersData);\n\n//         // Initialize DataTable after fetching data\n//         $('#userTable').DataTable();\n//       } catch (error) {\n//         console.error('Error fetching users:', error);\n//       }\n//     };\n\n//     fetchUsers();\n//   }, []);\n\n//   return (\n//     <div className=\"user-list-container\">\n//       <h1>User List</h1>\n//       <table id=\"userTable\" className=\"display datatable\" >\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>Name</th>\n//             <th>Email</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {users.map((user) => (\n//             <tr key={user.id}>\n//               <td>{user.id}</td>\n//               <td>{user.name}</td>\n//               <td>{user.email}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default UserList;\n// UserList.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport $ from 'jquery';\nimport 'datatables.net';\nimport '../UserList.css';\nimport UserService from '../services/UserService';\n\nconst UserList = () => {\n  const [users, setUsers] = useState([]);\n  const dataTableRef = useRef(null);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const usersData = await UserService.getAllUsers();\n        setUsers(usersData);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  useEffect(() => {\n    // Initialize DataTable after fetching data and setting it in state\n    if (users.length > 0 && !dataTableRef.current) {\n      dataTableRef.current = $('#userTable').DataTable();\n    }\n\n    return () => {\n      // Destroy DataTable instance on component unmount\n      if (dataTableRef.current) {\n        dataTableRef.current.destroy();\n      }\n    };\n  }, [users]);\n\n  return (\n    <div className=\"user-list-container\">\n      <h1>User List</h1>\n      <table id=\"userTable\" className=\"display\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Email</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map((user) => (\n            <tr key={user.id}>\n              <td>{user.id}</td>\n              <td>{user.name}</td>\n              <td>{user.email}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default UserList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}