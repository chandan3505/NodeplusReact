{"ast":null,"code":"// userService.js\nimport axios from 'axios';\nconst API_BASE_URL = 'http://localhost:300/api/users'; // Replace with your actual backend API URL\n//Use the backend \n\nconst userService = {\n  getAllUsers: async () => {\n    try {\n      const response = await axios.get(API_BASE_URL);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  getUserById: async userId => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/${userId}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  createUser: async (name, email) => {\n    try {\n      const response = await axios.post(API_BASE_URL, {\n        name,\n        email\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  updateUser: async (userId, name, email) => {\n    try {\n      const response = await axios.put(`${API_BASE_URL}/${userId}`, {\n        name,\n        email\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  deleteUser: async userId => {\n    try {\n      await axios.delete(`${API_BASE_URL}/${userId}`);\n    } catch (error) {\n      throw error;\n    }\n  }\n};\nexport default userService;","map":{"version":3,"names":["axios","API_BASE_URL","userService","getAllUsers","response","get","data","error","getUserById","userId","createUser","name","email","post","updateUser","put","deleteUser","delete"],"sources":["/Users/chandan/Desktop/Student/react-frontend/src/services/UserService.js"],"sourcesContent":["// userService.js\nimport axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:300/api/users'; // Replace with your actual backend API URL\n//Use the backend \n\nconst userService = {\n  getAllUsers: async () => {\n    try {\n      const response = await axios.get(API_BASE_URL);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  getUserById: async (userId) => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/${userId}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  createUser: async (name, email) => {\n    try {\n      const response = await axios.post(API_BASE_URL, { name, email });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  updateUser: async (userId, name, email) => {\n    try {\n      const response = await axios.put(`${API_BASE_URL}/${userId}`, { name, email });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  deleteUser: async (userId) => {\n    try {\n      await axios.delete(`${API_BASE_URL}/${userId}`);\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n\n\nexport default userService;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,gCAAgC,CAAC,CAAC;AACvD;;AAEA,MAAMC,WAAW,GAAG;EAClBC,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACJ,YAAY,CAAC;MAC9C,OAAOG,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAEDC,WAAW,EAAE,MAAOC,MAAM,IAAK;IAC7B,IAAI;MACF,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEJ,YAAa,IAAGQ,MAAO,EAAC,CAAC;MAC7D,OAAOL,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAEDG,UAAU,EAAE,MAAAA,CAAOC,IAAI,EAAEC,KAAK,KAAK;IACjC,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACa,IAAI,CAACZ,YAAY,EAAE;QAAEU,IAAI;QAAEC;MAAM,CAAC,CAAC;MAChE,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAEDO,UAAU,EAAE,MAAAA,CAAOL,MAAM,EAAEE,IAAI,EAAEC,KAAK,KAAK;IACzC,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACe,GAAG,CAAE,GAAEd,YAAa,IAAGQ,MAAO,EAAC,EAAE;QAAEE,IAAI;QAAEC;MAAM,CAAC,CAAC;MAC9E,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAEDS,UAAU,EAAE,MAAOP,MAAM,IAAK;IAC5B,IAAI;MACF,MAAMT,KAAK,CAACiB,MAAM,CAAE,GAAEhB,YAAa,IAAGQ,MAAO,EAAC,CAAC;IACjD,CAAC,CAAC,OAAOF,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAGD,eAAeL,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}