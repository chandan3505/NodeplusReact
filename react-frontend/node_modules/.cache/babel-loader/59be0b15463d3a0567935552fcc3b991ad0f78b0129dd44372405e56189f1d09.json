{"ast":null,"code":"var _jsxFileName = \"/Users/chandan/Desktop/Student/react-frontend/src/components/UserList.js\",\n  _s = $RefreshSig$();\n// UserList.js\nimport React, { useEffect, useState } from 'react';\nimport UserService from '../services/UserService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserList = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    // Fetch the list of users when the component mounts\n    const fetchUsers = async () => {\n      try {\n        const usersData = await UserService.getAllUsers();\n        setUsers(usersData);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n    fetchUsers();\n  }, []); // The empty dependency array ensures the effect runs only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User List- \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.name, \" - \", user.email]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(UserList, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useEffect","useState","UserService","jsxDEV","_jsxDEV","UserList","_s","users","setUsers","fetchUsers","usersData","getAllUsers","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","name","email","id","_c","$RefreshReg$"],"sources":["/Users/chandan/Desktop/Student/react-frontend/src/components/UserList.js"],"sourcesContent":["// UserList.js\nimport React, { useEffect, useState } from 'react';\nimport UserService from '../services/UserService';\n\nconst UserList = () => {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    // Fetch the list of users when the component mounts\n    const fetchUsers = async () => {\n      try {\n        const usersData = await UserService.getAllUsers();\n        setUsers(usersData);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n\n    fetchUsers();\n  }, []); // The empty dependency array ensures the effect runs only once when the component mounts\n\n  return (\n    <div>\n      <h1>User List- </h1>\n      <ul>\n        {users.map((user) => (\n          <li key={user.id}>\n            {user.name} - {user.email}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default UserList;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,SAAS,GAAG,MAAMR,WAAW,CAACS,WAAW,CAAC,CAAC;QACjDH,QAAQ,CAACE,SAAS,CAAC;MACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDH,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBd,OAAA;MAAAU,QAAA,EACGP,KAAK,CAACY,GAAG,CAAEC,IAAI,iBACdhB,OAAA;QAAAU,QAAA,GACGM,IAAI,CAACC,IAAI,EAAC,KAAG,EAACD,IAAI,CAACE,KAAK;MAAA,GADlBF,IAAI,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACZ,EAAA,CA7BID,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AA+Bd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}